// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitoringPrice.WebApi.Entities.Context;

#nullable disable

namespace MonitoringPrice.WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220624155456_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Смартфоны"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Планшеты"
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CharacteristicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrlId");

                    b.ToTable("Characteristic");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacteristicName = "Gray",
                            UrlId = 1
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerName = "Xiaomi"
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerName = "POCO"
                        },
                        new
                        {
                            Id = 3,
                            ManufacturerName = "RealMe"
                        },
                        new
                        {
                            Id = 4,
                            ManufacturerName = "UMIDIGI"
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CharacteristicId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WebSiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("WebSiteId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ManufacturerId = 1,
                            ProductName = "Redmi 10"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ManufacturerId = 4,
                            ProductName = "A11"
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RamName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Ram");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            RamName = "4/64 ГБ"
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "user"
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Orders")
                        .HasColumnType("int");

                    b.Property<int>("RamId")
                        .HasColumnType("int");

                    b.Property<string>("ShopName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RamId");

                    b.ToTable("Url");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Link = "https://aliexpress.ru/item/1005003212627329.html",
                            Orders = 0,
                            RamId = 1
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.ru",
                            Password = "123456",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.WebSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("WebSite");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aliexpress"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Banggood"
                        });
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Characteristic", b =>
                {
                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.Url", "Urls")
                        .WithMany("Characteristics")
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urls");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Price", b =>
                {
                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.Characteristic", "Characteristics")
                        .WithMany("Prices")
                        .HasForeignKey("CharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Characteristics");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Product", b =>
                {
                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.WebSite", null)
                        .WithMany("Products")
                        .HasForeignKey("WebSiteId");

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Ram", b =>
                {
                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.Product", "Product")
                        .WithMany("RamItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Url", b =>
                {
                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.Ram", "Ram")
                        .WithMany("Urls")
                        .HasForeignKey("RamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ram");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.User", b =>
                {
                    b.HasOne("MonitoringPrice.WebApi.Entities.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Characteristic", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Product", b =>
                {
                    b.Navigation("RamItems");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Ram", b =>
                {
                    b.Navigation("Urls");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.Url", b =>
                {
                    b.Navigation("Characteristics");
                });

            modelBuilder.Entity("MonitoringPrice.WebApi.Entities.Models.WebSite", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
